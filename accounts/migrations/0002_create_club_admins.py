# Generated by Django 5.2.7 on 2025-10-22 10:08

from django.db import migrations


CLUBS_DATA = [
    {
        "name": "Chelsea",
        "country": "England",
        "logo_url": "https://upload.wikimedia.org/wikipedia/en/c/cc/Chelsea_FC.svg",
    },
    {
        "name": "Arsenal",
        "country": "England",
        "logo_url": "https://upload.wikimedia.org/wikipedia/en/5/53/Arsenal_FC.svg",
    },
    {
        "name": "Liverpool",
        "country": "England",
        "logo_url": "https://upload.wikimedia.org/wikipedia/en/0/0c/Liverpool_FC.svg",
    },
    {
        "name": "Manchester City",
        "country": "England",
        "logo_url": "https://upload.wikimedia.org/wikipedia/en/e/eb/Manchester_City_FC_badge.svg",
    },
]


def create_clubs_and_admins(apps, schema_editor):
    """Fungsi untuk MAJU: Membuat klub dan admin."""
    Club = apps.get_model("main", "Club")
    CustomUser = apps.get_model("accounts", "CustomUser")
    Profile = apps.get_model("accounts", "Profile")

    for data in CLUBS_DATA:
        club_obj, created = Club.objects.get_or_create(
            name=data["name"],
            defaults={"country": data["country"], "logo_url": data["logo_url"]},
        )
        if created:
            print(f"-> Klub '{data['name']}' berhasil dibuat.")
        else:
            print(f"-> Klub '{data['name']}' sudah ada.")

        username = f"{data['name'].lower().replace(' ', '')}_admin"
        if not CustomUser.objects.filter(username=username).exists():
            admin_user = CustomUser.objects.create_user(
                username=username,
                password="adminpassword123",
                is_club_admin=True,
                is_fan=False,
            )
            Profile.objects.create(user=admin_user, managed_club=club_obj)
            print(f"--> Berhasil membuat admin '{username}'.\n")
        else:
            print(f"--> Admin '{username}' sudah ada.\n")


# --- FUNGSI BARU UNTUK PROSES MUNDUR (UNDO) ---
def delete_clubs_and_admins(apps, schema_editor):
    """Fungsi untuk MUNDUR: Menghapus klub dan admin yang dibuat."""
    Club = apps.get_model("main", "Club")
    CustomUser = apps.get_model("accounts", "CustomUser")

    for data in CLUBS_DATA:
        # Hapus user admin
        username = f"{data['name'].lower().replace(' ', '')}_admin"
        CustomUser.objects.filter(username=username).delete()
        print(f"--> Admin '{username}' dihapus.")

        # Hapus klub
        Club.objects.filter(name=data["name"]).delete()
        print(f"-> Klub '{data['name']}' dihapus.\n")


class Migration(migrations.Migration):

    dependencies = [
        ("accounts", "0001_initial"),
        ("main", "0001_initial"),
    ]

    operations = [
        migrations.RunPython(create_clubs_and_admins, delete_clubs_and_admins),
    ]
